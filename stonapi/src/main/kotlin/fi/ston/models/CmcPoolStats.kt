/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package fi.ston.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param baseId Base token id
 * @param baseLiquidity Base asset liquidity
 * @param baseName Base token name
 * @param baseSymbol Base token symbol
 * @param baseVolume Volume of base asset
 * @param lastPrice Last asset quota price in base assets
 * @param quoteId Quote token address
 * @param quoteLiquidity Quote asset liquidity
 * @param quoteName Quote token name
 * @param quoteSymbol Quote token symbol
 * @param quoteVolume Volume of quote asset
 * @param url URL to pool
 */


data class CmcPoolStats (

    /* Base token id */
    @Json(name = "base_id")
    val baseId: kotlin.String,

    /* Base asset liquidity */
    @Json(name = "base_liquidity")
    val baseLiquidity: kotlin.String,

    /* Base token name */
    @Json(name = "base_name")
    val baseName: kotlin.String,

    /* Base token symbol */
    @Json(name = "base_symbol")
    val baseSymbol: kotlin.String,

    /* Volume of base asset */
    @Json(name = "base_volume")
    val baseVolume: kotlin.String,

    /* Last asset quota price in base assets */
    @Json(name = "last_price")
    val lastPrice: kotlin.String,

    /* Quote token address */
    @Json(name = "quote_id")
    val quoteId: kotlin.String,

    /* Quote asset liquidity */
    @Json(name = "quote_liquidity")
    val quoteLiquidity: kotlin.String,

    /* Quote token name */
    @Json(name = "quote_name")
    val quoteName: kotlin.String,

    /* Quote token symbol */
    @Json(name = "quote_symbol")
    val quoteSymbol: kotlin.String,

    /* Volume of quote asset */
    @Json(name = "quote_volume")
    val quoteVolume: kotlin.String,

    /* URL to pool */
    @Json(name = "url")
    val url: kotlin.String

)

